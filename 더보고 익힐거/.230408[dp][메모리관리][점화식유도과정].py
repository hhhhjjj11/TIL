# 알고가기
# 1. 각 항 저장할때 숫자 너무커서 메모리초과난다는점.
# 2. 그 해결 방안으로 각 항 저장할때 나머지로 저장한다는점
# 3. 그래도 답에 지장 없다는점
# 4. 점화식 유도과정 (아래 주석 참고)


# 메모리초과 나는이유 : 각 항을 9901로 나눈 값으로 저장해야함.
# 그러지 않으면 숫자가 너무 커져서 오류남


N = int(input())

DP ={}

# 1열까지 
DP[1] = 3
# 2열
DP[2] = 7
# 3열
DP[3] = 17


for n in range(4,N+1):
    DP[n] = (DP[n-2]*5 + DP[n-3]*2)%9901  # 저장할때 9901나머지로 저장안하면 숫자가 너무 커져서 메모리초과남
# Q. 9901로 나눠서 저장해도 답이 그대론가? 나머지끼리 계산하면 괜찮았던것같다?

print(DP[N])


# 점화식 유도과정

# 직전줄이 비어잇는경우  -> 왼,오,X 
# 직전줄이 차있는경우 -> 오른쪽이 차있는경우 dU 왼쪽이차있는경우 -> 
# -> n(오른쪽차있) 2 오,X 또는 왼,X

# 전체 = 직전줄이 비어있는 경우 dU 직전줄이 차있는경우
# n(전체) = n(직전줄 비어있)*3 + n(직전줄 차있)*2
# n(직전줄비어있) = n(전전줄전체)
# 
# n(직전줄 차있) = n(전전줄 비어있)*2 + n(전전줄 차있) = n(전전줄 전체) + n(전전줄비어있)

# n째줄 전체 = n-1차있*2 + n-1비어있*3
# n-1 차있 = 오른쪽차있 + 왼쪽차있 (각각 반대쪽과, 비어놓는경우가 있음 X2)
# n-1 비어있 = n-2전체

# DP[n] = DP[n-2]*3 + n-1차있 *2
# n-1 차있 = n-2차있*1 +  n-2비어있*2 = n-2전체 + n-2비어있  =
#       n-2비어있 = n-3전체
# n-1 차있 = DP[n-2] + DP[n-3]